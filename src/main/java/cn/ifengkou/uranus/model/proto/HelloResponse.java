// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from proto

package cn.ifengkou.uranus.model.proto;

import io.protostuff.*;

import javax.annotation.Generated;
import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.util.Objects;


@Generated("java_bean")
public final class HelloResponse implements Externalizable, Message<HelloResponse>, Schema<HelloResponse>
{

    public static Schema<HelloResponse> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static HelloResponse getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final HelloResponse DEFAULT_INSTANCE = new HelloResponse();


    private String greeting;

    public HelloResponse()
    {

    }

    // getters and setters

    // greeting

    public String getGreeting()
    {
        return greeting;
    }


    public void setGreeting(String greeting)
    {
        this.greeting = greeting;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null || this.getClass() != obj.getClass()) {
            return false;
        }
        final HelloResponse that = (HelloResponse) obj;
        return
                Objects.equals(this.greeting, that.greeting);
    }

    @Override
    public int hashCode() {
        return Objects.hash(greeting);
    }

    @Override
    public String toString() {
        return "HelloResponse{" +
                    "greeting=" + greeting +
                '}';
    }
    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<HelloResponse> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public HelloResponse newMessage()
    {
        return new HelloResponse();
    }

    public Class<HelloResponse> typeClass()
    {
        return HelloResponse.class;
    }

    public String messageName()
    {
        return HelloResponse.class.getSimpleName();
    }

    public String messageFullName()
    {
        return HelloResponse.class.getName();
    }

    public boolean isInitialized(HelloResponse message)
    {
        return true;
    }

    public void mergeFrom(Input input, HelloResponse message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 1:
                    message.greeting = input.readString();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }
        }
    }


    public void writeTo(Output output, HelloResponse message) throws IOException
    {
        if(message.greeting != null)
            output.writeString(1, message.greeting, false);
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }


}
