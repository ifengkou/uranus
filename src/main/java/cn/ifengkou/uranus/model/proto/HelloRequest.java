// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from proto

package cn.ifengkou.uranus.model.proto;

import io.protostuff.*;

import javax.annotation.Generated;
import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.util.Objects;


@Generated("java_bean")
public final class HelloRequest implements Externalizable, Message<HelloRequest>, Schema<HelloRequest>
{

    public static Schema<HelloRequest> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static HelloRequest getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final HelloRequest DEFAULT_INSTANCE = new HelloRequest();


    private String name;

    public HelloRequest()
    {

    }

    // getters and setters

    // name

    public String getName()
    {
        return name;
    }


    public void setName(String name)
    {
        this.name = name;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null || this.getClass() != obj.getClass()) {
            return false;
        }
        final HelloRequest that = (HelloRequest) obj;
        return
                Objects.equals(this.name, that.name);
    }

    @Override
    public int hashCode() {
        return Objects.hash(name);
    }

    @Override
    public String toString() {
        return "HelloRequest{" +
                    "name=" + name +
                '}';
    }
    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<HelloRequest> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public HelloRequest newMessage()
    {
        return new HelloRequest();
    }

    public Class<HelloRequest> typeClass()
    {
        return HelloRequest.class;
    }

    public String messageName()
    {
        return HelloRequest.class.getSimpleName();
    }

    public String messageFullName()
    {
        return HelloRequest.class.getName();
    }

    public boolean isInitialized(HelloRequest message)
    {
        return true;
    }

    public void mergeFrom(Input input, HelloRequest message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 1:
                    message.name = input.readString();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }
        }
    }


    public void writeTo(Output output, HelloRequest message) throws IOException
    {
        if(message.name != null)
            output.writeString(1, message.name, false);
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }


}
